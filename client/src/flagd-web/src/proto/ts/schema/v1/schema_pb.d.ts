// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file schema/v1/schema.proto (package schema.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message schema.v1.ResolveBooleanRequest
 */
export declare class ResolveBooleanRequest extends Message<ResolveBooleanRequest> {
  /**
   * @generated from field: string flag_key = 1;
   */
  flagKey: string;

  /**
   * @generated from field: google.protobuf.Struct context = 2;
   */
  context?: Struct;

  constructor(data?: PartialMessage<ResolveBooleanRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveBooleanRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveBooleanRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveBooleanRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveBooleanRequest;

  static equals(a: ResolveBooleanRequest | PlainMessage<ResolveBooleanRequest> | undefined, b: ResolveBooleanRequest | PlainMessage<ResolveBooleanRequest> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveBooleanResponse
 */
export declare class ResolveBooleanResponse extends Message<ResolveBooleanResponse> {
  /**
   * @generated from field: bool value = 1;
   */
  value: boolean;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * @generated from field: string variant = 3;
   */
  variant: string;

  constructor(data?: PartialMessage<ResolveBooleanResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveBooleanResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveBooleanResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveBooleanResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveBooleanResponse;

  static equals(a: ResolveBooleanResponse | PlainMessage<ResolveBooleanResponse> | undefined, b: ResolveBooleanResponse | PlainMessage<ResolveBooleanResponse> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveStringRequest
 */
export declare class ResolveStringRequest extends Message<ResolveStringRequest> {
  /**
   * @generated from field: string flag_key = 1;
   */
  flagKey: string;

  /**
   * @generated from field: google.protobuf.Struct context = 2;
   */
  context?: Struct;

  constructor(data?: PartialMessage<ResolveStringRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveStringRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveStringRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveStringRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveStringRequest;

  static equals(a: ResolveStringRequest | PlainMessage<ResolveStringRequest> | undefined, b: ResolveStringRequest | PlainMessage<ResolveStringRequest> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveStringResponse
 */
export declare class ResolveStringResponse extends Message<ResolveStringResponse> {
  /**
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * @generated from field: string variant = 3;
   */
  variant: string;

  constructor(data?: PartialMessage<ResolveStringResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveStringResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveStringResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveStringResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveStringResponse;

  static equals(a: ResolveStringResponse | PlainMessage<ResolveStringResponse> | undefined, b: ResolveStringResponse | PlainMessage<ResolveStringResponse> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveFloatRequest
 */
export declare class ResolveFloatRequest extends Message<ResolveFloatRequest> {
  /**
   * @generated from field: string flag_key = 1;
   */
  flagKey: string;

  /**
   * @generated from field: google.protobuf.Struct context = 2;
   */
  context?: Struct;

  constructor(data?: PartialMessage<ResolveFloatRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveFloatRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveFloatRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveFloatRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveFloatRequest;

  static equals(a: ResolveFloatRequest | PlainMessage<ResolveFloatRequest> | undefined, b: ResolveFloatRequest | PlainMessage<ResolveFloatRequest> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveFloatResponse
 */
export declare class ResolveFloatResponse extends Message<ResolveFloatResponse> {
  /**
   * @generated from field: double value = 1;
   */
  value: number;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * @generated from field: string variant = 3;
   */
  variant: string;

  constructor(data?: PartialMessage<ResolveFloatResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveFloatResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveFloatResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveFloatResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveFloatResponse;

  static equals(a: ResolveFloatResponse | PlainMessage<ResolveFloatResponse> | undefined, b: ResolveFloatResponse | PlainMessage<ResolveFloatResponse> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveIntRequest
 */
export declare class ResolveIntRequest extends Message<ResolveIntRequest> {
  /**
   * @generated from field: string flag_key = 1;
   */
  flagKey: string;

  /**
   * @generated from field: google.protobuf.Struct context = 2;
   */
  context?: Struct;

  constructor(data?: PartialMessage<ResolveIntRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveIntRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveIntRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveIntRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveIntRequest;

  static equals(a: ResolveIntRequest | PlainMessage<ResolveIntRequest> | undefined, b: ResolveIntRequest | PlainMessage<ResolveIntRequest> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveIntResponse
 */
export declare class ResolveIntResponse extends Message<ResolveIntResponse> {
  /**
   * @generated from field: int64 value = 1;
   */
  value: bigint;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * @generated from field: string variant = 3;
   */
  variant: string;

  constructor(data?: PartialMessage<ResolveIntResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveIntResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveIntResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveIntResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveIntResponse;

  static equals(a: ResolveIntResponse | PlainMessage<ResolveIntResponse> | undefined, b: ResolveIntResponse | PlainMessage<ResolveIntResponse> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveObjectRequest
 */
export declare class ResolveObjectRequest extends Message<ResolveObjectRequest> {
  /**
   * @generated from field: string flag_key = 1;
   */
  flagKey: string;

  /**
   * @generated from field: google.protobuf.Struct context = 2;
   */
  context?: Struct;

  constructor(data?: PartialMessage<ResolveObjectRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveObjectRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveObjectRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveObjectRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveObjectRequest;

  static equals(a: ResolveObjectRequest | PlainMessage<ResolveObjectRequest> | undefined, b: ResolveObjectRequest | PlainMessage<ResolveObjectRequest> | undefined): boolean;
}

/**
 * @generated from message schema.v1.ResolveObjectResponse
 */
export declare class ResolveObjectResponse extends Message<ResolveObjectResponse> {
  /**
   * @generated from field: google.protobuf.Struct value = 1;
   */
  value?: Struct;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * @generated from field: string variant = 3;
   */
  variant: string;

  constructor(data?: PartialMessage<ResolveObjectResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.ResolveObjectResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveObjectResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveObjectResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveObjectResponse;

  static equals(a: ResolveObjectResponse | PlainMessage<ResolveObjectResponse> | undefined, b: ResolveObjectResponse | PlainMessage<ResolveObjectResponse> | undefined): boolean;
}

/**
 * @generated from message schema.v1.EventStreamResponse
 */
export declare class EventStreamResponse extends Message<EventStreamResponse> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: google.protobuf.Struct data = 2;
   */
  data?: Struct;

  constructor(data?: PartialMessage<EventStreamResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "schema.v1.EventStreamResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventStreamResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventStreamResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventStreamResponse;

  static equals(a: EventStreamResponse | PlainMessage<EventStreamResponse> | undefined, b: EventStreamResponse | PlainMessage<EventStreamResponse> | undefined): boolean;
}

